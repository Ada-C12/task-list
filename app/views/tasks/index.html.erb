
<ol>
  <% @tasks.each do |task|  %>
    <li>
      <%=link_to task.name, task_path(task)%>
      <ul>
        <%=link_to "Edit", edit_task_path(task.id)%>
        <%=link_to "Delete", task_path(task.id), method: :delete, data: {confirm: "Are you sure?"}%>
        <%if task.completed != nil%>
          <%=link_to "Mark Uncomplete", complete_task_path(task.id), method: :patch%>
        <%elsif task.completed == nil%>
          <%=link_to "Mark Complete", complete_task_path(task.id), method: :patch%>
        <%end%>
      </ul>
    </li>
  <%end%>
</ol>














    <%# <li><%=link_to task[:name], task_path(task)%>
    <%# <li><%=link_to "Complete?", completed_task_path(task.id), method: :patch %>
    
    <%# <% if task.completed != nil %>
      <%# <li class="strike_through_task"><%= link_to task[:name], task_path(task)%>
      <%# <%= link_to "Complete?", completed_task_path(task.id), method: :patch %>
    <%# <% else %> 
      <%# <li class="unstrike_through_task"><%= link_to task[:name], task_path(task) %>
      <%# <%= link_to "Complete?", completed_task_path(task.id), method: :patch %> 
    <%# <% end %> 
  
      <%# link_to is default a get request, so we have to change it to a ":patch" request via the method: %>

<%# 
If completed == nil, a button called "mark complete" pops up and leads to the completed method in controller.
If completed != nil, a button called "mark uncomplete" pops up and leads to the completed method in controller.

The completed method will also have an if and else statement.  %>









