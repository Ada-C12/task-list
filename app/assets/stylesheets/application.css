/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */


/* GLOBAL */

a {
  text-decoration: none;
  /* color set in tasks.scss */
}

ol {
  list-style-type: none;
}

h1, h2 {
  text-transform: uppercase;
}

.task-data li > span {
  margin-left: -1rem;
}

.list-number::after {
  content: ". ";
}

.task-complete {
  /* make completed tasks bold */
  font-weight: bold;
}


/* BODY */

body {
  margin: auto;
  width: 90%;
}

@media only screen and (max-width: 600px) {
  body {
    width: 70%;
  }
}


/* HEADER and FOOTER */

header, footer {
  text-align: center;
  padding: 1em;
}


/* HEADER */

header a::before {
  content: "[ "
}

header a::after {
  content: " ]"
}

header a {
  font-size: 0.9em;
  line-height: 1em;
}

header span, footer div {
  padding: 0.5em 2em 0.5em 2em;
  border-radius: 0.6em;
}

header span {
  display: flex;
  flex-direction: column;
  width: max-content;
  margin: auto;
}

header span:hover {
  font-weight: bold;
  cursor: pointer;
}

header span:active {
  transform: translateY(0.2rem);
}


/* MAIN */

/* main, footer { */
  /* border set in tasks.scss */
/* } */

footer {
  margin-top: -0.1rem;
}

main {
  display: grid;
  grid-template-columns: 30% 70%;
  grid-template-rows: 20% 80%;
}

main h1 {
  grid-column-start: 1;
  grid-column-end: 3;

  grid-row-start: 1;
  grid-row-end: 2;

  margin-left: 1.5rem;
  margin-bottom: 2rem;
  padding: 0.5em 1em 0.5em 1em;
}

main nav {
  grid-column-start: 1;
  grid-column-end: 2;

  grid-row-start: 2;
  grid-row-end: 3;
}

.main-body {
  grid-column-start: 2;
  grid-column-end: 3;

  grid-row-start: 2;
  grid-row-end: 3;
}

@media only screen and (max-width: 600px) {
  main {
    display: flex;
    flex-direction: column;
  }

  main h1 {
    text-align: center;
    margin-left: 0;
  }
}


/* NAV */

main nav {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-weight: bold;
}

main nav > * {
  /* border set in tasks.scss */
  border-radius: 0.6em;
  padding: 0.5em 1em 0.5em 1em;
  margin: 0.5em;
  line-height: 1.5rem;
}

main nav > *:hover {
  font-size: 1.05em;
  line-height: 1.5rem;
}

main nav > a:active {
  transform: translateY(0.2rem);
}

/* MAIN SECTION */

.main-body h2 {
  text-align: center;
}

.main-body {
  margin-right: 2em;
  margin-bottom: 8rem;
  padding-bottom: 2em;

  /* border set in tasks.scss */
  border-radius: 1rem;
}

@media only screen and (max-width: 600px) {
  .main-body {
    width: 90%;
    margin: auto;
    margin-top: 2rem;
    margin-bottom: 4rem;
  }
}

/* TASK LIST */

.task-name {
  font-size: 1.2em;
  display: inline-block;
  margin-bottom: 1em;
}

.task-options {
  font-size: 0.9em;
}

.task-data > h3 {
  margin-left: 0;
}

.task-data > * {
  margin: 1em;
}

.task-data ol {
  padding-left: 0;
}

.task-data {
  padding-left: 0;
  margin-left: 3rem;
}

.task-data > li {
  padding: 1rem 2rem 1rem 2rem;
  border-radius: 1rem;
  margin-right: 3rem;
}

.task-data > * {
  padding: 0.8em;
  margin-right: 3em;
  border-radius: 1em;
}

.task-details {
  margin-bottom: 3rem;
  margin-left: 0;
}

.task-options {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  padding: 0;
}

/* lines between task options  */

/* reference: https://stackoverflow.com/questions/10033299/is-there-any-way-to-specify-a-css-shorthand-for-all-elements-except-the-first-l */
.task-options > *:not(:last-child) {
  padding-right: 0.5em;
  /* border-right set in tasks.scss */
}

.task-options > *:not(:first-child) {
  padding-left: 0.5em;
}

/* hover effects */

.task-data > li:hover .task-name {
  font-weight: bold;
}

.task-name:hover {
  font-style: italic;
}

.task-options > *:hover {
  text-decoration: underline;
}

/* media call */

@media only screen and (max-width: 600px) {
  .task-data > li {
    display: flex;
    flex-direction: column;
  }

  .task-data {
    margin-left: 1.5em;
  }

  .task-data span:first-child {
    margin-top: 1em;
  }

  .task-options {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }

  .task-options > *:first-child {
    margin-top: 1.5em;
  }

  .task-options > * {
    padding-right: 0.5em;
  /* border-right set in tasks.scss */
  }

  .task-options > *:not(:last-child) {
    padding-bottom: 1em;
  }

}

/* SHOW PAGE */

.task-wrapper > h3 {
  margin: 0;
  padding: 0;
}

.task-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin-left: 0;
}


/* FORMS */

.current {
  margin-bottom: 2rem;
}

.current, .form-container {
  width: 90%;
  margin: auto;
}

.form-container {
  grid-column-start: 2;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-end: 3;
}

.form-container > * {
  display: flex;
  flex-direction: column;
}

.form-container {
  /* border set in tasks.scss */
  border-radius: 1em;
}

.task-form {
  padding: 1rem;
  display: flex;
  flex-direction: column;
}

.task-form > h3 {
  margin-left: 0;
}

.task-form > *:not(:last-child) {
  margin-top: 1rem;
}

/* submit button */

.task-button {
  font-size: 0.8em;
  margin-top: 3rem;
  margin-bottom: 1rem;
  padding: 1rem;
  border-radius: 1rem;
  line-height: 1.5rem;
}

.task-button:hover {
  cursor: pointer;
  font-size: 0.9em;
  line-height: 1.5rem;
}

.task-button:active {
  transform: translateY(0.3rem);
}