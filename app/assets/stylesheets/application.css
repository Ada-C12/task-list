/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */


/* GLOBAL */

a {
  text-decoration: none;
  color: black;
}

ol {
  list-style-type: none;
}

h1, h2 {
  text-transform: uppercase;
}

.task-data li > span {
  margin-left: -1rem;
}

.list-number::after {
  content: ". ";
}

/* give completed tasks a more substantial strike-through
than the default line-through */
.task-complete {
  /* create a transparent-to-blue background gradient */
  background:
    linear-gradient(
      to bottom, black 0%,
      black 100%
    );

  /* set background to go from the top left corner
  to the middle right corner */
  background-position: 0% 50%;

  /* repeat background across the width of the element */
  width: max-content;
  background-repeat: repeat-x;

  /* limit height of gradient */
  background-size: 0.1em 0.1em;
  transition: background-size .2s;

  /* make completed tasks bold */
  font-weight: bold;
}


/* BODY */

body {
  margin: auto;
  width: 90%;
}

/* @media only screen and (min-width: 800px) {
  body {
    width: 50%;
  }
} */

/* @media only screen and (max-width: 800px) {
  body {
    width: 60%;
  }
} */

/* @media only screen and (max-width: 600px) {
  body {
    width: 70%;
  }
} */


/* HEADER and FOOTER */

header, footer {
  text-align: center;
}


/* HEADER */

header::before {
  content: "["
}

header::after {
  content: "]"
}

header:hover {
  font-weight: bold;
}


/* MAIN */

main, footer {
  border: 0.1rem solid black;
}

footer {
  margin-top: -0.1rem;
}

main {
  display: grid;
  grid-template-columns: 30% 70%;
  grid-template-rows: 20% 80%;
}

main h1 {
  grid-column-start: 1;
  grid-column-end: 3;

  grid-row-start: 1;
  grid-row-end: 2;

  margin-left: 1.5rem;
  margin-bottom: 2rem;
  padding: 0.5em 1em 0.5em 1em;
}

main nav {
  grid-column-start: 1;
  grid-column-end: 2;

  grid-row-start: 2;
  grid-row-end: 3;
}

.main-body {
  grid-column-start: 2;
  grid-column-end: 3;

  grid-row-start: 2;
  grid-row-end: 3;
}


/* NAV */

main nav {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-weight: bold;
}

main nav > * {
  border: 0.08rem solid black;
  border-radius: 0.6em;
  padding: 0.5em 1em 0.5em 1em;
  margin: 0.5em;
}

main nav > *:hover {
  font-size: 1.05em;
  padding: 0.6em 1.1em 0.6em 1.1em;
}

/* MAIN SECTION */

.main-body h2 {
  text-align: center;
}

.main-body {
  margin-right: 2em;
  margin-bottom: 8em;
  padding-bottom: 2em;

  border: 0.08rem solid black;
  border-radius: 1rem;
}

/* TASK LIST */

.task-data > li {
  margin: 1em;
}

.task-options {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
}

.task-data {
  padding-left: 0;
  margin-left: 3rem;
}

/* lines between task options  */

/* reference: https://stackoverflow.com/questions/10033299/is-there-any-way-to-specify-a-css-shorthand-for-all-elements-except-the-first-l */
.task-options > *:not(:last-child) {
  padding-right: 0.5em;
  border-right: 0.09rem solid black;
}

.task-options > *:not(:first-child) {
  padding-left: 0.5em;
}

/* hover effects */

.task-data > li:hover .task-name {
  font-weight: bold;
}

.task-name:hover {
  font-style: italic;
}

.task-options > *:hover {
  text-decoration: underline;
}


/* FORMS */

.edit-task, .create-task {
  grid-column-start: 2;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-end: 3;
}

.updated, .create-task {
  border: 0.08rem solid black;
  border-radius: 1em;
}

.task-details {
  margin-bottom: 3rem;
}

.current {
  margin-bottom: 2rem;
}

.edit-task, .create-task {
  width: 90%;
  margin: auto;
}

.updated, .create-task {
  padding: 1rem;
  display: flex;
  flex-direction: column;
}

.updated > *, .create-task > * {
  margin: 1em;
}

.updated > h3, .create-task > h3 {
  margin-left: 0;
}

/* submit button */

input[type=submit] {
  font-size: 0.8em;
  margin-top: 2rem;
  padding: 1rem;
  border-radius: 1rem;
}

input[type=submit]:hover {
  cursor: pointer;
  font-size: 0.9em;
}